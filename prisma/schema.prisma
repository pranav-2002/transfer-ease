// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int            @id @default(autoincrement())
  email          String         @unique
  first_name     String         @db.Char(50)
  last_name      String         @db.Char(50)
  address        String         @db.Char(200)
  city           String         @db.Char(15)
  state          String         @db.Char(2)
  postalCode     String         @db.Char(5)
  dateOfBirth    String         @db.Char(10)
  ssn            String         @db.Char(4)
  password       String
  phoneNumber    String         @unique @db.Char(10)
  created_at     DateTime       @default(now())
  updated_at     DateTime       @updatedAt
  accounts       Accounts[]
  funds_sent     Transactions[] @relation("SourceUser")
  funds_received Transactions[] @relation("DestinationUser")
}

model Accounts {
  id                    Int      @id @default(autoincrement())
  user_id               Int
  user                  User     @relation(fields: [user_id], references: [id])
  account_id            String
  available_balance     Int
  current_balance       Int
  iso_currency_code     String
  account_name          String
  account_official_name String
  account_type          String
  access_token          String
  funding_sourceId      String   @unique
  customer_id           String   @unique
  created_at            DateTime @default(now())
  updated_at            DateTime @updatedAt
}

model Transactions {
  id                  Int      @id @default(autoincrement())
  transfer_id         String   @unique
  amount              Int
  description         String   @db.Char(100)
  source_user         User     @relation("SourceUser", fields: [source_user_id], references: [id])
  destination_user    User     @relation("DestinationUser", fields: [destination_user_id], references: [id])
  source_user_id      Int
  destination_user_id Int
  created_at          DateTime @default(now())
  updated_at          DateTime @updatedAt
}
